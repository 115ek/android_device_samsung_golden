diff --git a/healthd/Android.mk b/healthd/Android.mk
index b923724..c431b79 100644
--- a/healthd/Android.mk
+++ b/healthd/Android.mk
@@ -81,9 +81,9 @@ ifeq ($(BOARD_USES_QCOM_HARDWARE),true)
 BOARD_HAL_STATIC_LIBRARIES ?= libhealthd.qcom
 endif
 
-# Symlink /charger to /sbin/healthd
+# Symlink /charger to /sbin/charger
 LOCAL_POST_INSTALL_CMD := $(hide) mkdir -p $(TARGET_ROOT_OUT) \
-    && rm -f $(TARGET_ROOT_OUT)/charger && ln -sf /sbin/healthd $(TARGET_ROOT_OUT)/charger
+    && rm -f $(TARGET_ROOT_OUT)/charger && ln -sf /sbin/charger $(TARGET_ROOT_OUT)/charger
 
 include $(BUILD_EXECUTABLE)
 
diff --git a/init/Android.mk b/init/Android.mk
index 0f5fe1c..b3ecdb8 100644
--- a/init/Android.mk
+++ b/init/Android.mk
@@ -83,7 +83,9 @@ LOCAL_SRC_FILES:= \
 
 SYSTEM_CORE_INIT_DEFINES := BOARD_CHARGING_MODE_BOOTING_LPM \
     BOARD_CHARGING_CMDLINE_NAME \
-    BOARD_CHARGING_CMDLINE_VALUE
+    BOARD_CHARGING_CMDLINE_VALUE \
+    BOARD_LPM_BOOT_ARGUMENT_NAME \
+    BOARD_LPM_BOOT_ARGUMENT_VALUE
 
 $(foreach system_core_init_define,$(SYSTEM_CORE_INIT_DEFINES), \
   $(if $($(system_core_init_define)), \
diff --git a/init/init.cpp b/init/init.cpp
old mode 100755
new mode 100644
index 9992b47..3fa9643
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -78,6 +78,11 @@ static int property_triggers_enabled = 0;
 #define BOARD_CHARGING_CMDLINE_VALUE "true"
 #endif
 
+#ifndef BOARD_LPM_BOOT_ARGUMENT_NAME
+#define BOARD_LPM_BOOT_ARGUMENT_NAME "lpm_boot"
+#define BOARD_LPM_BOOT_ARGUMENT_VALUE "1"
+#endif
+
 static char qemu[32];
 static char battchg_pause[32];
 
@@ -87,6 +92,8 @@ static time_t process_needs_restart;
 
 const char *ENV[32];
 
+static unsigned lpm_bootmode = 0;
+
 bool waiting_for_exec = false;
 
 static int epoll_fd = -1;
@@ -334,6 +341,12 @@ static void import_kernel_nv(const std::string& key, const std::string& value, b
 
     if (key == "qemu") {
         strlcpy(qemu, value.c_str(), sizeof(qemu));
+#ifdef BOARD_LPM_BOOT_ARGUMENT_NAME
+    } else if (key == BOARD_LPM_BOOT_ARGUMENT_NAME) {
+        if (!strcmp(value.c_str(),BOARD_LPM_BOOT_ARGUMENT_VALUE)) {
+            lpm_bootmode = 1;
+        }
+#endif
     } else if (key == BOARD_CHARGING_CMDLINE_NAME) {
         strlcpy(battchg_pause, value.c_str(), sizeof(battchg_pause));
     } else if (android::base::StartsWith(key, "androidboot.")) {
@@ -533,7 +546,7 @@ static void selinux_initialize(bool in_kernel_domain) {
 
 static int charging_mode_booting(void) {
 #ifndef BOARD_CHARGING_MODE_BOOTING_LPM
-    return 0;
+    return lpm_bootmode;
 #else
     int f;
     char cmb;
@@ -677,6 +690,7 @@ int main(int argc, char** argv) {
     if (bootmode == "charger" || charging_mode_booting() ||
             strcmp(battchg_pause, BOARD_CHARGING_CMDLINE_VALUE) == 0) {
         am.QueueEventTrigger("charger");
+        parser.ParseConfig("/lpm.rc");
     } else if (strncmp(bootmode.c_str(), "ffbm", 4) == 0) {
         NOTICE("Booting into ffbm mode\n");
         am.QueueEventTrigger("ffbm");
@@ -717,3 +731,4 @@ int main(int argc, char** argv) {
 
     return 0;
 }
+
