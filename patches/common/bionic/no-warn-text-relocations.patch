From 72f810fa3491106cc28264b6b0b61f2c46f42146 Mon Sep 17 00:00:00 2001
From: Meticulus <theonejohnnyd@gmail.com>
Date: Thu, 8 Sep 2016 16:56:11 -0500
Subject: [PATCH] no-warn-text-relocations

Change-Id: If9ef37d8b3c3f8ed1ee53710de370fc698324494
---
 linker/linker.cpp | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/linker/linker.cpp b/linker/linker.cpp
index 99c02d8..b87834a 100644
--- a/linker/linker.cpp
+++ b/linker/linker.cpp
@@ -3016,19 +3016,21 @@ bool soinfo::link_image(const soinfo_list_t& global_group, const soinfo_list_t&
 #if !defined(__i386__) // ffmpeg says that they require text relocations on x86
     if (get_application_target_sdk_version() != __ANDROID_API__
         && get_application_target_sdk_version() > 22) {
-      PRINT("%s: has text relocations", get_realpath());
-      DL_ERR("%s: has text relocations", get_realpath());
+      //PRINT("%s: has text relocations", get_realpath());
+      //DL_ERR("%s: has text relocations", get_realpath());
       return false;
     }
 #endif
     // Make segments writable to allow text relocations to work properly. We will later call
     // phdr_table_protect_segments() after all of them are applied and all constructors are run.
+#if 0
 #if defined(USE_LEGACY_BLOBS)
     DEBUG("%s has text relocations. This is wasting memory and prevents "
 #else
     DL_WARN("%s has text relocations. This is wasting memory and prevents "
 #endif
             "security hardening. Please fix.", get_realpath());
+#endif
     if (phdr_table_unprotect_segments(phdr, phnum, load_bias) < 0) {
       DL_ERR("can't unprotect loadable segments for \"%s\": %s",
              get_realpath(), strerror(errno));
-- 
1.9.1

